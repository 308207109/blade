buildscript {
	repositories {
		mavenLocal()

		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}

	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.service.builder", version: "latest.release"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.wsdd.builder", version: "latest.release"
	}
}

repositories {
	mavenLocal()

	maven {
		url "http://cdn.repository.liferay.com/nexus/content/groups/public"
	}
}

apply plugin: "com.liferay.portal.tools.service.builder"
apply plugin: "com.liferay.portal.tools.wsdd.builder"

buildService {
	apiDirName = "../blade.servicebuilder.api/src"
	beanLocatorUtil = "com.liferay.util.bean.PortletBeanLocatorUtil"
	hbmFileName = "resources/META-INF/module-hbm.xml"
	implDirName = "src"
	inputFileName = "service.xml"
	modelHintsFileName = "resources/META-INF/portlet-model-hints.xml"
	osgiModule = true
	propsUtil = "blade.servicebuilder.service.util.PropsUtil"
	remotingFileName = null
	resourcesDirName = "resources"	
	springFileName = "resources/META-INF/spring/module-spring.xml"
	springNamespaces = ["beans","osgi"]
	sqlDirName = "resources/META-INF/sql"
	sqlFileName = "tables.sql"	
	testDirName = "it"
}

buildWSDD {
	inputFileName = "service.xml"
	outputDirName = "src"
	serverConfigFileName = "resources/server-config.wsdd"
}
